set encoding=utf-8
scriptencoding utf-8

function! s:ensure_dir(dir)
  if filewritable(a:dir) != 2
    call mkdir(a:dir, "p", 0700)
  endif
endfunction

silent! packadd minpac
if !exists('*minpac#init')
  silent !git clone https://github.com/k-takata/minpac.git $XDG_CACHE_HOME/vim/pack/minpac/opt/minpac
  augroup minpac
    autocmd!
    autocmd VimEnter * call minpac#update()
  augroup END
endif

packadd minpac

call minpac#init({'dir': $XDG_CACHE_HOME . '/vim'})
call minpac#add('k-takata/minpac', {'type': 'opt'})
call minpac#add('tpope/vim-sensible')

call minpac#add('ciaranm/inkpot', {'do': 'colorscheme inkpot'})
call minpac#add('editorconfig/editorconfig-vim')
call minpac#add('ervandew/supertab')
call minpac#add('jamessan/vim-gnupg')
call minpac#add('junegunn/fzf')
call minpac#add('junegunn/fzf.vim')
call minpac#add('junegunn/vim-easy-align')
call minpac#add('scrooloose/nerdtree')
call minpac#add('tpope/vim-repeat')
call minpac#add('tpope/vim-sleuth')
call minpac#add('tpope/vim-surround')
call minpac#add('tpope/vim-unimpaired')
call minpac#add('vim-airline/vim-airline')
call minpac#add('vim-airline/vim-airline-themes')
call minpac#add('wincent/loupe')
call minpac#add('wincent/terminus')

call minpac#add('LaTeX-Box-Team/LaTeX-Box')
call minpac#add('vhda/verilog_systemverilog.vim')
call minpac#add('sheerun/vim-polyglot')
call minpac#add('sukima/xmledit')

call minpac#add('lepture/vim-jinja')

call minpac#add('alx741/yesod.vim')
call minpac#add('pbrisbin/vim-syntax-shakespeare')

if has('neovim') || exists('*ch_close_in')
  call minpac#add('w0rp/ale')
endif

if has('macunix')
  call minpac#add('itspriddle/vim-marked')
endif

silent! colorscheme inkpot
augroup transparent_term
  autocmd!
  autocmd ColorScheme * highlight Normal ctermbg=NONE
augroup END

inoremap jj <Esc>
nnoremap <C-t> :Files<CR>

set linebreak showbreak=â†©
set showcmd
set wildmode=longest,full

set tabstop=2 shiftwidth=2

if exists('+breakindent')
  set breakindent breakindentopt=sbr
endif

if exists('+relativenumber')
  set relativenumber
else
  set number
endif

for s:dir in ['backup', 'swap', 'undo']
  call s:ensure_dir($XDG_CACHE_HOME . '/vim/' . s:dir)
endfor

set backupdir=.,$XDG_CACHE_HOME/vim/backup
set directory=.,$XDG_CACHE_HOME/vim/swap
if exists('+undofile')
  set undofile
  set undodir=$XDG_CACHE_HOME/vim/undo
endif

let g:airline_powerline_fonts = 1
let g:LatexBox_Folding = 1
let g:NERDTreeHijackNetrw = 1
